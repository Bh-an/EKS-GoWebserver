name: Integration

on:
  push:
    branches:
      - main

jobs:

  Detect_changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      application: ${{ steps.filter.outputs.application }}
      terraform: ${{ steps.filter.outputs.terraform }}
      helmchart: ${{ steps.filter.outputs.helmchart }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Filtering changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          application:
            - 'go-server/**'
          helmchart:
            - 'helmchart/**'

  PublishImage:
    name: Build and push docker image to GHCR
    needs: Detect_changes
    if: ${{ needs.Detect_changes.outputs.application == 'true' }}
    runs-on: ubuntu-latest
    env: 
      IMG_NAME: ${{ vars.IMAGE_NAME }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate Image version
        id: app_semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          bump_each_commit_patch_pattern: (PATCH)
          version_format: "${major}.${minor}.${patch}"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          enable_prerelease_mode: true
          change_path: "go-server/"

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN  }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./go-server/
          file: ./go-server/Dockerfile
          push: true
          tags: |
            ${{ env.IMG_NAME }}:${{ steps.app_semver.outputs.version }}
            ${{ github.ref_name == 'main' && format('{0}:latest', env.IMG_NAME) || '' }}

      - name: Get PR number of push
        uses: actions/github-script@v6
        id: pr_number
        with:
          script: |
            return (   
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
          result-encoding: string
        
      - name: Comment versioning info
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Pushed image: ${{ env.IMG_NAME }}:${{ steps.app_semver.outputs.version }}
            
          pr-number: ${{ steps.pr_number.outputs.result }}
  HelmRelease:
    needs: Detect_changes
    if: ${{ needs.Detect_changes.outputs.helmchart == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
      
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.7.0
        with:
          pages_branch: helm-release
          charts_dir: ./helmchart/
          skip_existing: true
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Get PR number of push
        uses: actions/github-script@v6
        id: pr_number
        with:
          script: |
            return (   
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
          result-encoding: string

      - name: Get new version
        uses: jacobtomlinson/gha-read-helm-chart@master
        id: chartinfo
        with:
          path: ./helmchart/timeservice/
        
      - name: Comment versioning info
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Released chart for version: ${{ steps.chartinfo.outputs.version }}
            Application version: ${{ steps.chartinfo.outputs.appVersion }}

            Helm-chart released :tada:
          pr-number: ${{ steps.pr_number.outputs.result }}