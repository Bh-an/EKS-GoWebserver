name: Code tests

on:
  pull_request:
    branches:
    - main

jobs:

  Detect_changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      application: ${{ steps.filter.outputs.application }}
      terraform: ${{ steps.filter.outputs.terraform }}
      helmcharts: ${{ steps.filter.outputs.helmcharts }}
    steps:
    - name: Filtering changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          application:
            - 'go-server/**'
          terraform:
            - 'terraform/**'
          helmcharts:
            - 'helmcharts/**'


  GoApp:
    needs: Detect_changes
    if: ${{ needs.Detect_changes.outputs.application == 'true' }}
    defaults:
      run:
        working-directory: ./go-server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install dependencies
        run: go get ...

      - name: Run tests
        run: go test ./internal/... -v

      - name: Build Go
        run: go build -o go-server ./cmd/go-server/main.go

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run : docker buildx build .

  Terraform:
    needs: Detect_changes
    if: ${{ needs.Detect_changes.outputs.terraform == 'true' }}
    defaults:
      run:
        working-directory: ./terraform
    runs-on: ubuntu-latest
    env: 
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate build version
        id: tf_semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          bump_each_commit_patch_pattern: "Merge pull request"
          version_format: "${major}.${minor}.${patch}"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          enable_prerelease_mode: true
          change_path: "terraform/"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform validate
        uses: dflook/terraform-validate@v1
        with:
          path: ./terraform/

      - name: Terraform plan
        uses: dflook/terraform-plan@v1
        with:
          path: ./terraform/
          backend_config_file: ./terraform/default.s3.tfbackend
          label: k8s_dev

      - name: Comment versioning info
        uses: thollander/actions-comment-pull-request@v3
        with:
          message: |
            Current infrastructure version: ${{ steps.tf_semver.outputs.version }}


  Helmcharts:
    needs: Detect_changes
    if: ${{ needs.Detect_changes.outputs.helmcharts == 'true' }}
    defaults:
      run:
        working-directory: ./helmcharts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: LBC chart test
        run: helm lint ./aws-load-balancer-controller/

      - name: Timeservice chart test
        run: helm lint ./timeservice/



