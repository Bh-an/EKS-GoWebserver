name: Integration and Deploy

on:
  push:
    branches:
      - main

jobs:

  Detect_changes:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      application: ${{ steps.filter.outputs.application }}
      terraform: ${{ steps.filter.outputs.terraform }}
      helmcharts: ${{ steps.filter.outputs.helmcharts }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Filtering changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          application:
            - 'go-server/**'
          terraform:
            - 'terraform/**'
          helmcharts:
            - 'helmcharts/**'

  PublishImage:
    name: Build and push docker image to GHCR
    needs: Detect_changes
    if: ${{ needs.Detect_changes.outputs.application == 'true' }}
    runs-on: ubuntu-latest
    env: 
      IMG_NAME: ${{ vars.IMAGE_NAME }}
      GH_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate Image version
        id: app_semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          bump_each_commit_patch_pattern: "Merge pull request"
          version_format: "${major}.${minor}.${patch}"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          enable_prerelease_mode: true
          change_path: "go-server/"

      - name: Login to GCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN  }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./go-server/
          file: ./go-server/Dockerfile
          push: true
          tags: |
            ${{ env.IMG_NAME }}:${{ steps.app_semver.outputs.version }}
            ${{ github.ref_name == 'main' && format('{0}:latest', env.IMG_NAME) || '' }}

  InfraBuild:
    name: Building IaC changes to infrastructure
    needs: Detect_changes
    if: ${{ needs.Detect_changes.outputs.terraform == 'true' }}
    defaults:
      run:
        working-directory: ./terraform
    runs-on: ubuntu-latest
    env: 
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform apply
        uses: dflook/terraform-apply@v1
        with:
          path: ./terraform/
          backend_config_file: ./terraform/default.s3.tfbackend
          label: k8s_dev

      - name: Calculate build version
        id: tf_semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          bump_each_commit_patch_pattern: "Merge pull request"
          version_format: "${major}.${minor}.${patch}"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          enable_prerelease_mode: true
          change_path: "terraform/"

      - name: Get PR number of push
        uses: actions/github-script@v6
        id: pr_number
        with:
          script: |
            return (   
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
          result-encoding: string
        
      - name: Comment versioning info
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Merged Infrastructure version: ${{ steps.tf_semver.outputs.version }}

            Infrastructure deployed :rocket:
          pr-number: steps.pr_number.outputs.result
