name: Checks 

on:
  pull_request:
    branches:
    - main

jobs:

  DetectChanges:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      application: ${{ steps.filter.outputs.application }}
      terraform: ${{ steps.filter.outputs.terraform }}
      helmchart: ${{ steps.filter.outputs.helmchart }}
      deployment: ${{ steps.filter.outputs.deployment }}
    steps:
    - name: Filtering changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          application:
            - 'go-server/**'
          terraform:
            - 'terraform/**'
          helmchart:
            - 'helmchart/**'
          deployment:
            - 'helmfile.d/**'


  TestApp:
    needs: DetectChanges
    if: ${{ needs.DetectChanges.outputs.application == 'true' }}
    defaults:
      run:
        working-directory: ./go-server
    runs-on: ubuntu-latest
    env: 
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate Image version
        id: app_semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          bump_each_commit_patch_pattern: "(PATCH)"
          version_format: "${major}.${minor}.${patch}-prerelease.${increment}"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          enable_prerelease_mode: true
          change_path: "go-server/"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Install dependencies
        run: go get ...

      - name: Run tests
        run: go test ./internal/... -v

      - name: Build Go
        run: go build -o go-server ./cmd/go-server/main.go

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        run : docker buildx build .

      - name: Comment versioning info
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Current Application version: ${{ steps.app_semver.outputs.version }}

  InfraPlan:
    needs: DetectChanges
    if: ${{ needs.DetectChanges.outputs.terraform == 'true' }}
    defaults:
      run:
        working-directory: ./terraform
    runs-on: ubuntu-latest
    env: 
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Calculate build version
        id: tf_semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          bump_each_commit: true
          bump_each_commit_patch_pattern: (PATCH-TF)"
          version_format: "${major}.${minor}.${patch}-prerelease.${increment}"
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          enable_prerelease_mode: true
          change_path: "terraform/"
          namespace: tf

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Terraform validate
        uses: dflook/terraform-validate@v1
        with:
          path: ./terraform/

      - name: Terraform plan
        uses: dflook/terraform-plan@v1
        with:
          path: ./terraform/
          backend_config_file: ./terraform/default.s3.tfbackend
          label: k8s_dev

      - name: Comment versioning info
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Current infrastructure version: ${{ steps.tf_semver.outputs.version }}

  
  HelmLint:
    needs: DetectChanges
    if: ${{ needs.DetectChanges.outputs.helmchart == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v3

      - name: Timeservice chart test
        run: helm lint ./helmchart/timeservice/

      - name: Get new version
        uses: jacobtomlinson/gha-read-helm-chart@master
        id: chartinfo
        with:
          path: ./helmchart/timeservice/
        
      - name: Comment versioning info
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Linted chart version: ${{ steps.chartinfo.outputs.version }}

  DeploymentChanges:
    needs: DetectChanges
    if: ${{ needs.DetectChanges.outputs.deployment == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      system: ${{ steps.filter.outputs.system }}
      app: ${{ steps.filter.outputs.app }}
    steps:
    - name: Filtering changes
      uses: dorny/paths-filter@v3
      id: filter
      with:
        filters: |
          system:
            - 'helmfile.d/system.yaml'
          app:
            - 'helmfile.d/app.yaml'
            
  UpdateDependencies:
    needs: DeploymentChanges
    if: ${{ needs.DeploymentChanges.outputs.system == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set kube context
        run: aws eks --region ${{ vars.AWS_REGION }}  update-kubeconfig --name ${{ vars.CLUSTER_NAME }}

      - name: Apply CRDs
        run: kubectl apply -k "github.com/aws/eks-charts/stable/aws-load-balancer-controller/crds?ref=master"
  
  SystemDiff:
    needs: [DeploymentChanges, UpdateDependencies]
    if: ${{ needs.DeploymentChanges.outputs.system == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set kube context
        run: aws eks --region ${{ vars.AWS_REGION }}  update-kubeconfig --name ${{ vars.CLUSTER_NAME }}
      
      - name: System deployment
        uses: helmfile/helmfile-action@v2.0.4
        id: helm_diff
        with:
          helmfile-version: 'v0.170.0'
          helm-version: 'v3.17.2'
          helm-plugins: >
            https://github.com/databus23/helm-diff
          helmfile-args: -l component=system diff

      - name: Comment Diff STD-OUT
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Ran helmfile diff for system releases

            <details>
            <summary>Diff output</summary>
            ${{ steps.helm_diff.outputs.helmfile-stdout }}            
            </details>

  AppDiff:
    needs: DeploymentChanges
    if: ${{ needs.DeploymentChanges.outputs.app == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set kube context
        run: aws eks --region ${{ vars.AWS_REGION }}  update-kubeconfig --name ${{ vars.CLUSTER_NAME }}
      
      - name: App deployment
        uses: helmfile/helmfile-action@v2.0.4
        id: helm_diff
        with:
          helmfile-version: 'v0.170.0'
          helm-version: 'v3.17.2'
          helm-plugins: >
            https://github.com/databus23/helm-diff
          helmfile-args: -l component=app diff

      - name: Comment Diff STD-OUT
        uses: thollander/actions-comment-pull-request@v3
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          message: |
            Ran helmfile diff for app releases

            <details>
            <summary>Diff output</summary>
            ${{ steps.helm_diff.outputs.helmfile-stdout }}            
            </details>


          
